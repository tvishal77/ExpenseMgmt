{"ast":null,"code":"var _jsxFileName = \"D:\\\\downloads\\\\wise work\\\\Blog_02\\\\blogging_02\\\\src\\\\components\\\\UserData.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useEffect } from \"react\";\nimport blogContext from \"../context/blogs/BlogContext\";\nimport Blogitem from \"../components/Blogitem\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Blogitem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserData(props) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const context = useContext(blogContext);\n  const history = useNavigate();\n  const {\n    blog,\n    getBlogs,\n    getUser\n  } = context;\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      getBlogs();\n    } else {\n      history(\"/\");\n    }\n    const fetchUsers = async () => {\n      try {\n        const response = await fetch('/api/users'); // replace with your API endpoint\n        const data = await response.json();\n        setUsers(data);\n      } catch (error) {\n        console.error('Failed to fetch users:', error);\n      }\n    };\n    fetchUsers();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `headuser text-${props.mode === \"light\" ? \"rgb(95, 158, 160)\" : \"white\"}`,\n      children: \"Your Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row my-3\",\n      children: blog.map(blogs => {\n        return /*#__PURE__*/_jsxDEV(Blogitem, {\n          blogs: blogs,\n          mode: props.mode\n        }, blogs._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(UserData, \"EBZoVclKqjgtvEU30hd2tre5fWs=\", false, function () {\n  return [useNavigate];\n});\n_c = UserData;\nvar _c;\n$RefreshReg$(_c, \"UserData\");","map":{"version":3,"names":["React","useContext","useEffect","blogContext","Blogitem","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UserData","props","_s","users","setUsers","useState","context","history","blog","getBlogs","getUser","localStorage","getItem","fetchUsers","response","fetch","data","json","error","console","children","className","mode","fileName","_jsxFileName","lineNumber","columnNumber","map","blogs","_id","_c","$RefreshReg$"],"sources":["D:/downloads/wise work/Blog_02/blogging_02/src/components/UserData.js"],"sourcesContent":["import React, { useContext, useEffect } from \"react\";\r\nimport blogContext from \"../context/blogs/BlogContext\";\r\nimport Blogitem from \"../components/Blogitem\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Blogitem.css\"\r\n\r\nexport default function UserData(props) {\r\n    const [users, setUsers] = useState([]);\r\n    const context = useContext(blogContext)\r\n    const history = useNavigate()\r\n    const { blog, getBlogs, getUser } = context\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token')) {\r\n            getBlogs()\r\n        }\r\n        else {\r\n            history(\"/\")\r\n        }\r\n        const fetchUsers = async () => {\r\n            try {\r\n                const response = await fetch('/api/users'); // replace with your API endpoint\r\n                const data = await response.json();\r\n                setUsers(data);\r\n            } catch (error) {\r\n                console.error('Failed to fetch users:', error);\r\n            }\r\n        };\r\n        fetchUsers();\r\n    }, [])\r\n    return (\r\n        <>\r\n            <h1 className={`headuser text-${props.mode === \"light\" ? \"rgb(95, 158, 160)\" : \"white\"}`}>Your Blogs</h1>\r\n            <div className=\"row my-3\">\r\n                {blog.map((blogs) => {\r\n                    return <Blogitem key={blogs._id} blogs={blogs} mode={props.mode} />\r\n                })}\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,SAAS,QAAQ,OAAO;AACpD,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvB,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMC,OAAO,GAAGf,UAAU,CAACE,WAAW,CAAC;EACvC,MAAMc,OAAO,GAAGZ,WAAW,EAAE;EAC7B,MAAM;IAAEa,IAAI;IAAEC,QAAQ;IAAEC;EAAQ,CAAC,GAAGJ,OAAO;EAC3Cd,SAAS,CAAC,MAAM;IACZ,IAAImB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAC/BH,QAAQ,EAAE;IACd,CAAC,MACI;MACDF,OAAO,CAAC,GAAG,CAAC;IAChB;IACA,MAAMM,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC;QAC5C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAClCb,QAAQ,CAACY,IAAI,CAAC;MAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAClD;IACJ,CAAC;IACDL,UAAU,EAAE;EAChB,CAAC,EAAE,EAAE,CAAC;EACN,oBACIhB,OAAA,CAAAE,SAAA;IAAAqB,QAAA,gBACIvB,OAAA;MAAIwB,SAAS,EAAG,iBAAgBpB,KAAK,CAACqB,IAAI,KAAK,OAAO,GAAG,mBAAmB,GAAG,OAAQ,EAAE;MAAAF,QAAA,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACzG7B,OAAA;MAAKwB,SAAS,EAAC,UAAU;MAAAD,QAAA,EACpBZ,IAAI,CAACmB,GAAG,CAAEC,KAAK,IAAK;QACjB,oBAAO/B,OAAA,CAACH,QAAQ;UAAiBkC,KAAK,EAAEA,KAAM;UAACN,IAAI,EAAErB,KAAK,CAACqB;QAAK,GAA1CM,KAAK,CAACC,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAoC;MACvE,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA,gBACP;AAEX;AAACxB,EAAA,CAjCuBF,QAAQ;EAAA,QAGZL,WAAW;AAAA;AAAAmC,EAAA,GAHP9B,QAAQ;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}