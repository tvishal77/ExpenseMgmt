{"ast":null,"code":"var _jsxFileName = \"D:\\\\downloads\\\\wise work\\\\Blog_02\\\\blogging_02\\\\src\\\\components\\\\UserData.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\n// import blogContext from \"../context/blogs/BlogContext\";\nimport Blogitem from \"../components/Blogitem\";\n// import { useNavigate } from \"react-router-dom\";\nimport \"./Blogitem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserData(props) {\n  _s();\n  // const context = useContext(blogContext)\n  // const history = useNavigate()\n  // const { blog, getBlogs, users } = context\n  // useEffect(() => {\n  //     if (localStorage.getItem('token')) {\n  //         getBlogs()\n  //     }\n  //     else {\n  //         history(\"/\")\n  //     }\n\n  // }, [])\n  const [blog, setBlog] = useState(null);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    // Fetch blog details from MongoDB API endpoint\n    const fetchBlogDetails = async () => {\n      try {\n        const response = await fetch(`http://localhost:5000/api/blogs/fuserblog`); // replace with your API endpoint for fetching blog details\n        const data = await response.json();\n        setBlog(data.blog);\n        setUser(data.user);\n      } catch (error) {\n        console.error('Failed to fetch blog details:', error);\n      }\n    };\n    fetchBlogDetails();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `headuser text-${props.mode === \"light\" ? \"rgb(95, 158, 160)\" : \"white\"}`,\n      children: \"Your Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row my-3\",\n      children: blog.map(blogs => {\n        return /*#__PURE__*/_jsxDEV(Blogitem, {\n          blogs: blogs,\n          mode: props.mode,\n          user: user.name\n        }, blogs._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(UserData, \"XK9iap9X+by9WJ2xOo22eS7js9c=\");\n_c = UserData;\nvar _c;\n$RefreshReg$(_c, \"UserData\");","map":{"version":3,"names":["React","useState","useEffect","Blogitem","jsxDEV","_jsxDEV","Fragment","_Fragment","UserData","props","_s","blog","setBlog","user","setUser","fetchBlogDetails","response","fetch","data","json","error","console","children","className","mode","fileName","_jsxFileName","lineNumber","columnNumber","map","blogs","name","_id","_c","$RefreshReg$"],"sources":["D:/downloads/wise work/Blog_02/blogging_02/src/components/UserData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n// import blogContext from \"../context/blogs/BlogContext\";\r\nimport Blogitem from \"../components/Blogitem\"\r\n// import { useNavigate } from \"react-router-dom\";\r\nimport \"./Blogitem.css\"\r\n\r\nexport default function UserData(props) {\r\n\r\n    // const context = useContext(blogContext)\r\n    // const history = useNavigate()\r\n    // const { blog, getBlogs, users } = context\r\n    // useEffect(() => {\r\n    //     if (localStorage.getItem('token')) {\r\n    //         getBlogs()\r\n    //     }\r\n    //     else {\r\n    //         history(\"/\")\r\n    //     }\r\n\r\n    // }, [])\r\n    const [blog, setBlog] = useState(null);\r\n    const [user, setUser] = useState(null);\r\n\r\n    useEffect(() => {\r\n        // Fetch blog details from MongoDB API endpoint\r\n        const fetchBlogDetails = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:5000/api/blogs/fuserblog`); // replace with your API endpoint for fetching blog details\r\n                const data = await response.json();\r\n                setBlog(data.blog);\r\n                setUser(data.user);\r\n            } catch (error) {\r\n                console.error('Failed to fetch blog details:', error);\r\n            }\r\n        };\r\n\r\n        fetchBlogDetails();\r\n    }, []);\r\n    return (\r\n        <>\r\n            <h1 className={`headuser text-${props.mode === \"light\" ? \"rgb(95, 158, 160)\" : \"white\"}`}>Your Blogs</h1>\r\n            <div className=\"row my-3\">\r\n                {blog.map((blogs) => {\r\n                    return <Blogitem key={blogs._id} blogs={blogs} mode={props.mode} user={user.name} />\r\n                })}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C;AACA,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvB,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAEpC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ;IACA,MAAMa,gBAAgB,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0C,CAAC,CAAC,CAAC;QAC3E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;QAClCP,OAAO,CAACM,IAAI,CAACP,IAAI,CAAC;QAClBG,OAAO,CAACI,IAAI,CAACL,IAAI,CAAC;MACtB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACzD;IACJ,CAAC;IAEDL,gBAAgB,EAAE;EACtB,CAAC,EAAE,EAAE,CAAC;EACN,oBACIV,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACIjB,OAAA;MAAIkB,SAAS,EAAG,iBAAgBd,KAAK,CAACe,IAAI,KAAK,OAAO,GAAG,mBAAmB,GAAG,OAAQ,EAAE;MAAAF,QAAA,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACzGvB,OAAA;MAAKkB,SAAS,EAAC,UAAU;MAAAD,QAAA,EACpBX,IAAI,CAACkB,GAAG,CAAEC,KAAK,IAAK;QACjB,oBAAOzB,OAAA,CAACF,QAAQ;UAAiB2B,KAAK,EAAEA,KAAM;UAACN,IAAI,EAAEf,KAAK,CAACe,IAAK;UAACX,IAAI,EAAEA,IAAI,CAACkB;QAAK,GAA3DD,KAAK,CAACE,GAAG;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAqD;MACxF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEA;EAAA,gBACP;AAEX;AAAClB,EAAA,CA3CuBF,QAAQ;AAAAyB,EAAA,GAARzB,QAAQ;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}