{"ast":null,"code":"var _jsxFileName = \"D:\\\\downloads\\\\wise work\\\\Blog_02\\\\blogging_02\\\\src\\\\context\\\\blogs\\\\BlogState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport blogContext from \"./BlogContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogState = props => {\n  _s();\n  // const state = {\n  //     \"name\": \"vishal\",\n  //     \"sem\": \"6c\"\n  // }\n\n  const BlogInitial = [];\n  const [blog, setBlog] = useState(BlogInitial);\n  const getBlogs = async () => {\n    const response = await fetch(`http://localhost:5000/api/blogs/fuserblog`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setBlog(json);\n  };\n  const getAll = async () => {\n    const response = await fetch(`http://localhost:5000/api/blogs/fetchall`, {\n      method: 'GET',\n      headers: {\n        'content-type': 'application/json'\n      }\n    });\n    const json = await response.json();\n    console.log(json);\n    setBlog(json);\n  };\n  const addBlog = async (title, description, tag) => {\n    console.log(\"adding a new data\");\n    const response = await fetch(`http://localhost:5000/api/blogs/write`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    console.log(json);\n    const blogAdd = {\n      \"_id\": \"6437ed2c9a1a01ee5ea3aaa0\",\n      \"user\": \"643411e930747720356dafbb\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"timestamp\": \"2023-04-13T11:53:16.395Z\",\n      \"__v\": 0\n    };\n    setBlog(blog.concat(blogAdd));\n    alert(\"blog has been Added Succesfully!!\");\n  };\n  const deleteBlog = async id => {\n    //Api call\n    const response = await fetch(`http://localhost:5000/api/blogs/delete/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      }\n    });\n    const json = response.json();\n    console.log(json);\n    console.log(\"Deleted\" + id);\n    const newBlogs = blog.filter(blogs => {\n      return blogs._id !== id;\n    });\n    setBlog(newBlogs);\n    alert(\"Blog Deleted Succesfully\");\n  };\n\n  // const editBlog = async (id, title, description, tag) => {\n  //     //Api call \n  //     const response = await fetch(`http://localhost:5000/api/blogs/update/${id}`, {\n  //         method: 'POST',\n  //         headers: {\n  //             'content-type': 'application/json',\n  //             'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQzNDExZTkzMDc0NzcyMDM1NmRhZmJiIn0sImlhdCI6MTY4MTMwMjM4Nn0.3A5Fj-j5uWUb6c3eYYvK4iqeTbZ2JTZNk6aiXQy5UDk'\n  //         },\n  //         body: JSON.stringify({ title, description, tag })\n  //     })\n  //     const json = response.json();\n  //     console.log(json)\n\n  //     //logic to edit in client\n  //     for (let index = 0; index < blog.length; index++) {\n  //         const element = blog[index];\n  //         if (element.id === id) {\n  //             element.title = title;\n  //             element.description = description;\n  //             element.tag = tag;\n  //         }\n  //     }\n  // }\n  return /*#__PURE__*/_jsxDEV(blogContext.Provider, {\n    value: {\n      blog,\n      setBlog,\n      addBlog,\n      deleteBlog,\n      getBlogs,\n      getAll\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogState, \"g+QZawB4/LJaon5ZFdH+CmBhFPA=\");\n_c = BlogState;\nexport default BlogState;\nvar _c;\n$RefreshReg$(_c, \"BlogState\");","map":{"version":3,"names":["React","useState","blogContext","jsxDEV","_jsxDEV","BlogState","props","_s","BlogInitial","blog","setBlog","getBlogs","response","fetch","method","headers","localStorage","getItem","json","console","log","getAll","addBlog","title","description","tag","body","JSON","stringify","blogAdd","concat","alert","deleteBlog","id","newBlogs","filter","blogs","_id","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/downloads/wise work/Blog_02/blogging_02/src/context/blogs/BlogState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport blogContext from \"./BlogContext\";\r\n\r\nconst BlogState = (props) => {\r\n    // const state = {\r\n    //     \"name\": \"vishal\",\r\n    //     \"sem\": \"6c\"\r\n    // }\r\n\r\n    const BlogInitial = []\r\n    const [blog, setBlog] = useState(BlogInitial)\r\n    const getBlogs = async () => {\r\n\r\n        const response = await fetch(`http://localhost:5000/api/blogs/fuserblog`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'auth-token': localStorage.getItem('token')\r\n            },\r\n        })\r\n        const json = await response.json()\r\n        console.log(json)\r\n        setBlog(json)\r\n    }\r\n\r\n\r\n    const getAll = async () => {\r\n\r\n        const response = await fetch(`http://localhost:5000/api/blogs/fetchall`, {\r\n            method: 'GET',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n            },\r\n        })\r\n        const json = await response.json()\r\n        console.log(json)\r\n        setBlog(json)\r\n    }\r\n\r\n    const addBlog = async (title, description, tag) => {\r\n        console.log(\"adding a new data\")\r\n\r\n        const response = await fetch(`http://localhost:5000/api/blogs/write`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'auth-token': localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({ title, description, tag })\r\n        })\r\n        const json = response.json();\r\n        console.log(json)\r\n\r\n\r\n        const blogAdd = {\r\n            \"_id\": \"6437ed2c9a1a01ee5ea3aaa0\",\r\n            \"user\": \"643411e930747720356dafbb\",\r\n            \"title\": title,\r\n            \"description\": description,\r\n            \"tag\": tag,\r\n            \"timestamp\": \"2023-04-13T11:53:16.395Z\",\r\n            \"__v\": 0\r\n        }\r\n        setBlog(blog.concat(blogAdd))\r\n        alert(\"blog has been Added Succesfully!!\")\r\n    }\r\n\r\n    const deleteBlog = async (id) => {\r\n        //Api call\r\n        const response = await fetch(`http://localhost:5000/api/blogs/delete/${id}`, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'auth-token': localStorage.getItem('token')\r\n            }\r\n        })\r\n        const json = response.json();\r\n        console.log(json)\r\n\r\n        console.log(\"Deleted\" + id)\r\n        const newBlogs = blog.filter((blogs) => { return blogs._id !== id })\r\n        setBlog(newBlogs)\r\n        alert(\"Blog Deleted Succesfully\")\r\n    }\r\n\r\n    // const editBlog = async (id, title, description, tag) => {\r\n    //     //Api call \r\n    //     const response = await fetch(`http://localhost:5000/api/blogs/update/${id}`, {\r\n    //         method: 'POST',\r\n    //         headers: {\r\n    //             'content-type': 'application/json',\r\n    //             'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQzNDExZTkzMDc0NzcyMDM1NmRhZmJiIn0sImlhdCI6MTY4MTMwMjM4Nn0.3A5Fj-j5uWUb6c3eYYvK4iqeTbZ2JTZNk6aiXQy5UDk'\r\n    //         },\r\n    //         body: JSON.stringify({ title, description, tag })\r\n    //     })\r\n    //     const json = response.json();\r\n    //     console.log(json)\r\n\r\n\r\n    //     //logic to edit in client\r\n    //     for (let index = 0; index < blog.length; index++) {\r\n    //         const element = blog[index];\r\n    //         if (element.id === id) {\r\n    //             element.title = title;\r\n    //             element.description = description;\r\n    //             element.tag = tag;\r\n    //         }\r\n    //     }\r\n    // }\r\n    return (\r\n        <blogContext.Provider value={{ blog, setBlog, addBlog, deleteBlog, getBlogs, getAll }}>\r\n            {props.children}\r\n        </blogContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BlogState;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,WAAW,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,SAAS,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB;EACA;EACA;EACA;;EAEA,MAAMC,WAAW,GAAG,EAAE;EACtB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAACO,WAAW,CAAC;EAC7C,MAAMG,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAEzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,2CAA0C,EAAE;MACtEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAC9C;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBR,OAAO,CAACQ,IAAI,CAAC;EACjB,CAAC;EAGD,MAAMG,MAAM,GAAG,MAAAA,CAAA,KAAY;IAEvB,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,0CAAyC,EAAE;MACrEC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB;IACJ,CAAC,CAAC;IACF,MAAMG,IAAI,GAAG,MAAMN,QAAQ,CAACM,IAAI,EAAE;IAClCC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACjBR,OAAO,CAACQ,IAAI,CAAC;EACjB,CAAC;EAED,MAAMI,OAAO,GAAG,MAAAA,CAAOC,KAAK,EAAEC,WAAW,EAAEC,GAAG,KAAK;IAC/CN,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAEhC,MAAMR,QAAQ,GAAG,MAAMC,KAAK,CAAE,uCAAsC,EAAE;MAClEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAC9C,CAAC;MACDS,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEL,KAAK;QAAEC,WAAW;QAAEC;MAAI,CAAC;IACpD,CAAC,CAAC;IACF,MAAMP,IAAI,GAAGN,QAAQ,CAACM,IAAI,EAAE;IAC5BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAGjB,MAAMW,OAAO,GAAG;MACZ,KAAK,EAAE,0BAA0B;MACjC,MAAM,EAAE,0BAA0B;MAClC,OAAO,EAAEN,KAAK;MACd,aAAa,EAAEC,WAAW;MAC1B,KAAK,EAAEC,GAAG;MACV,WAAW,EAAE,0BAA0B;MACvC,KAAK,EAAE;IACX,CAAC;IACDf,OAAO,CAACD,IAAI,CAACqB,MAAM,CAACD,OAAO,CAAC,CAAC;IAC7BE,KAAK,CAAC,mCAAmC,CAAC;EAC9C,CAAC;EAED,MAAMC,UAAU,GAAG,MAAOC,EAAE,IAAK;IAC7B;IACA,MAAMrB,QAAQ,GAAG,MAAMC,KAAK,CAAE,0CAAyCoB,EAAG,EAAC,EAAE;MACzEnB,MAAM,EAAE,QAAQ;MAChBC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAC9C;IACJ,CAAC,CAAC;IACF,MAAMC,IAAI,GAAGN,QAAQ,CAACM,IAAI,EAAE;IAC5BC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IAEjBC,OAAO,CAACC,GAAG,CAAC,SAAS,GAAGa,EAAE,CAAC;IAC3B,MAAMC,QAAQ,GAAGzB,IAAI,CAAC0B,MAAM,CAAEC,KAAK,IAAK;MAAE,OAAOA,KAAK,CAACC,GAAG,KAAKJ,EAAE;IAAC,CAAC,CAAC;IACpEvB,OAAO,CAACwB,QAAQ,CAAC;IACjBH,KAAK,CAAC,0BAA0B,CAAC;EACrC,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,oBACI3B,OAAA,CAACF,WAAW,CAACoC,QAAQ;IAACC,KAAK,EAAE;MAAE9B,IAAI;MAAEC,OAAO;MAAEY,OAAO;MAAEU,UAAU;MAAErB,QAAQ;MAAEU;IAAO,CAAE;IAAAmB,QAAA,EACjFlC,KAAK,CAACkC;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAE/B,CAAC;AAAArC,EAAA,CA/GKF,SAAS;AAAAwC,EAAA,GAATxC,SAAS;AAiHf,eAAeA,SAAS;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}