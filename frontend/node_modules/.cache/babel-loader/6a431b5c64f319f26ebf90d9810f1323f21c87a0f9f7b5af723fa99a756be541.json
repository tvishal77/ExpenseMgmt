{"ast":null,"code":"var _jsxFileName = \"D:\\\\downloads\\\\hackathon expense mgmt\\\\ExpenseMgmt\\\\frontend\\\\src\\\\context\\\\global\\\\GlobalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext } from \"react\";\nconst GlobalContext = /*#__PURE__*/createContext();\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nfunction GlobalState(props) {\n  _s();\n  const [income, setIncome] = useState([]);\n  const [expense, setExpense] = useState([]);\n  const [error, setError] = useState(null);\n  const addIncome = async (title, amount, date, category, description) => {\n    console.log(\"Adding new Income\");\n    const response = await fetch(`${BASE_URL}add-income`, {\n      method: \"POST\",\n      headers: {\n        'content-type': 'application/json',\n        'auth-token': localStorage.getItem('token')\n      },\n      body: JSON.stringify({\n        title,\n        amount,\n        date,\n        category,\n        description\n      })\n    });\n    const json = response.json();\n    console.log(json);\n    const Addin = {\n      \"user\": \"64719ad62d608481ee49fe86\",\n      \"_id\": \"647ddd1c8db91edd77f434c3\",\n      \"title\": title,\n      \"amount\": amount,\n      \"date\": date,\n      \"category\": category,\n      \"description\": description,\n      \"createdAt\": \"2023-06-05T13:03:24.183Z\",\n      \"updatedAt\": \"2023-06-05T13:03:24.183Z\",\n      \"__v\": 0\n    };\n    setIncome(income.concat(Addin));\n    alert(\"Income added successfully!\");\n  };\n  return /*#__PURE__*/_jsxDEV(globalContext.Provider, {\n    value: {\n      income,\n      addIncome\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(GlobalState, \"VouAe/b1QrjBgd2WIiIZ6BuhtZY=\");\n_c = GlobalState;\nexport default GlobalState;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalState\");","map":{"version":3,"names":["React","createContext","useContext","GlobalContext","axios","jsxDEV","_jsxDEV","BASE_URL","GlobalState","props","_s","income","setIncome","useState","expense","setExpense","error","setError","addIncome","title","amount","date","category","description","console","log","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","json","Addin","concat","alert","globalContext","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["D:/downloads/hackathon expense mgmt/ExpenseMgmt/frontend/src/context/global/GlobalContext.js"],"sourcesContent":["import React, { createContext, useContext } from \"react\";\r\n\r\nconst GlobalContext = createContext();\r\n\r\n\r\nimport axios from 'axios'\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\nfunction GlobalState(props) {\r\n    const [income, setIncome] = useState([]);\r\n    const [expense, setExpense] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const addIncome = async (title, amount, date, category, description) => {\r\n        console.log(\"Adding new Income\")\r\n        const response = await fetch(`${BASE_URL}add-income`, {\r\n            method: \"POST\",\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'auth-token': localStorage.getItem('token')\r\n            },\r\n            body: JSON.stringify({ title, amount, date, category, description })\r\n        })\r\n        const json = response.json();\r\n        console.log(json)\r\n\r\n        const Addin = {\r\n            \"user\": \"64719ad62d608481ee49fe86\",\r\n            \"_id\": \"647ddd1c8db91edd77f434c3\",\r\n            \"title\": title,\r\n            \"amount\": amount,\r\n            \"date\": date,\r\n            \"category\": category,\r\n            \"description\": description,\r\n            \"createdAt\": \"2023-06-05T13:03:24.183Z\",\r\n            \"updatedAt\": \"2023-06-05T13:03:24.183Z\",\r\n            \"__v\": 0\r\n\r\n        }\r\n        setIncome(income.concat(Addin))\r\n        alert(\"Income added successfully!\")\r\n\r\n    }\r\n\r\n    return (\r\n        <globalContext.Provider value={{ income, addIncome }}></globalContext.Provider>\r\n    )\r\n}\r\n\r\nexport default GlobalState\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(GlobalContext)\r\n}"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,QAAQ,OAAO;AAExD,MAAMC,aAAa,gBAAGF,aAAa,EAAE;AAGrC,OAAOG,KAAK,MAAM,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,MAAMC,QAAQ,GAAG,+BAA+B;AAEhD,SAASC,WAAWA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGC,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGF,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACG,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;EAExC,MAAMK,SAAS,GAAG,MAAAA,CAAOC,KAAK,EAAEC,MAAM,EAAEC,IAAI,EAAEC,QAAQ,EAAEC,WAAW,KAAK;IACpEC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAChC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEpB,QAAS,YAAW,EAAE;MAClDqB,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE,kBAAkB;QAClC,YAAY,EAAEC,YAAY,CAACC,OAAO,CAAC,OAAO;MAC9C,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QAAEf,KAAK;QAAEC,MAAM;QAAEC,IAAI;QAAEC,QAAQ;QAAEC;MAAY,CAAC;IACvE,CAAC,CAAC;IACF,MAAMY,IAAI,GAAGT,QAAQ,CAACS,IAAI,EAAE;IAC5BX,OAAO,CAACC,GAAG,CAACU,IAAI,CAAC;IAEjB,MAAMC,KAAK,GAAG;MACV,MAAM,EAAE,0BAA0B;MAClC,KAAK,EAAE,0BAA0B;MACjC,OAAO,EAAEjB,KAAK;MACd,QAAQ,EAAEC,MAAM;MAChB,MAAM,EAAEC,IAAI;MACZ,UAAU,EAAEC,QAAQ;MACpB,aAAa,EAAEC,WAAW;MAC1B,WAAW,EAAE,0BAA0B;MACvC,WAAW,EAAE,0BAA0B;MACvC,KAAK,EAAE;IAEX,CAAC;IACDX,SAAS,CAACD,MAAM,CAAC0B,MAAM,CAACD,KAAK,CAAC,CAAC;IAC/BE,KAAK,CAAC,4BAA4B,CAAC;EAEvC,CAAC;EAED,oBACIhC,OAAA,CAACiC,aAAa,CAACC,QAAQ;IAACC,KAAK,EAAE;MAAE9B,MAAM;MAAEO;IAAU;EAAE;IAAAwB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAA0B;AAEvF;AAACnC,EAAA,CAvCQF,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AAyCpB,eAAeA,WAAW;AAE1B,OAAO,MAAMuC,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAClC,OAAO9C,UAAU,CAACC,aAAa,CAAC;AACpC,CAAC;AAAA6C,GAAA,CAFYD,gBAAgB;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}