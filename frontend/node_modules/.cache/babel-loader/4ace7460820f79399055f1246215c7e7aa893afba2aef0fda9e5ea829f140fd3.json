{"ast":null,"code":"var _jsxFileName = \"D:\\\\downloads\\\\wise work\\\\Blog_02\\\\blogging_02\\\\src\\\\context\\\\blogs\\\\BlogState.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport blogContext from \"./BlogContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BlogState = props => {\n  _s();\n  // const state = {\n  //     \"name\": \"vishal\",\n  //     \"sem\": \"6c\"\n  // }\n\n  const BlogInitial = [];\n  const [blog, setBlog] = useState(BlogInitial);\n  const getBlogs = async (title, description, tag) => {\n    console.log(\"adding a new data\");\n    const response = await fetch(`http://localhost:5000/api/blogs/write`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQzNDExZTkzMDc0NzcyMDM1NmRhZmJiIn0sImlhdCI6MTY4MTMwMjM4Nn0.3A5Fj-j5uWUb6c3eYYvK4iqeTbZ2JTZNk6aiXQy5UDk'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    console.log(json);\n    const blogAdd = {\n      \"_id\": \"6437ed2c9a1a01ee5ea3aaa0\",\n      \"user\": \"643411e930747720356dafbb\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"timestamp\": \"2023-04-13T11:53:16.395Z\",\n      \"__v\": 0\n    };\n    setBlog(blog.concat(blogAdd));\n    alert(\"blog has been Added Succesfully!!\");\n  };\n  const addBlog = async (title, description, tag) => {\n    console.log(\"adding a new data\");\n    const response = await fetch(`http://localhost:5000/api/blogs/write`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQzNDExZTkzMDc0NzcyMDM1NmRhZmJiIn0sImlhdCI6MTY4MTMwMjM4Nn0.3A5Fj-j5uWUb6c3eYYvK4iqeTbZ2JTZNk6aiXQy5UDk'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    console.log(json);\n    const blogAdd = {\n      \"_id\": \"6437ed2c9a1a01ee5ea3aaa0\",\n      \"user\": \"643411e930747720356dafbb\",\n      \"title\": title,\n      \"description\": description,\n      \"tag\": tag,\n      \"timestamp\": \"2023-04-13T11:53:16.395Z\",\n      \"__v\": 0\n    };\n    setBlog(blog.concat(blogAdd));\n    alert(\"blog has been Added Succesfully!!\");\n  };\n  const deleteBlog = id => {\n    console.log(\"Deleted\" + id);\n    const newBlogs = blog.filter(blog => {\n      return NodeIterator._id !== id;\n    });\n    setBlog(newBlogs);\n  };\n  const editBlog = async (id, title, description, tag) => {\n    //Api call \n    const response = await fetch(`http://localhost:5000/api/blogs/update/${id}`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQzNDExZTkzMDc0NzcyMDM1NmRhZmJiIn0sImlhdCI6MTY4MTMwMjM4Nn0.3A5Fj-j5uWUb6c3eYYvK4iqeTbZ2JTZNk6aiXQy5UDk'\n      },\n      body: JSON.stringify({\n        title,\n        description,\n        tag\n      })\n    });\n    const json = response.json();\n    console.log(json);\n\n    //logic to edit in client\n    for (let index = 0; index < blog.length; index++) {\n      const element = blog[index];\n      if (element.id === id) {\n        element.title = title;\n        element.description = description;\n        element.tag = tag;\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(blogContext.Provider, {\n    value: {\n      blog,\n      setBlog,\n      addBlog,\n      deleteBlog,\n      editBlog\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 9\n  }, this);\n};\n_s(BlogState, \"g+QZawB4/LJaon5ZFdH+CmBhFPA=\");\n_c = BlogState;\nexport default BlogState;\nvar _c;\n$RefreshReg$(_c, \"BlogState\");","map":{"version":3,"names":["React","useState","blogContext","jsxDEV","_jsxDEV","BlogState","props","_s","BlogInitial","blog","setBlog","getBlogs","title","description","tag","console","log","response","fetch","method","headers","body","JSON","stringify","json","blogAdd","concat","alert","addBlog","deleteBlog","id","newBlogs","filter","NodeIterator","_id","editBlog","index","length","element","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/downloads/wise work/Blog_02/blogging_02/src/context/blogs/BlogState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport blogContext from \"./BlogContext\";\r\n\r\nconst BlogState = (props) => {\r\n    // const state = {\r\n    //     \"name\": \"vishal\",\r\n    //     \"sem\": \"6c\"\r\n    // }\r\n\r\n    const BlogInitial = []\r\n    const [blog, setBlog] = useState(BlogInitial)\r\n\r\n\r\n    const getBlogs = async (title, description, tag) => {\r\n        console.log(\"adding a new data\")\r\n\r\n        const response = await fetch(`http://localhost:5000/api/blogs/write`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQzNDExZTkzMDc0NzcyMDM1NmRhZmJiIn0sImlhdCI6MTY4MTMwMjM4Nn0.3A5Fj-j5uWUb6c3eYYvK4iqeTbZ2JTZNk6aiXQy5UDk'\r\n            },\r\n            body: JSON.stringify({ title, description, tag })\r\n        })\r\n        const json = response.json();\r\n        console.log(json)\r\n\r\n\r\n        const blogAdd = {\r\n            \"_id\": \"6437ed2c9a1a01ee5ea3aaa0\",\r\n            \"user\": \"643411e930747720356dafbb\",\r\n            \"title\": title,\r\n            \"description\": description,\r\n            \"tag\": tag,\r\n            \"timestamp\": \"2023-04-13T11:53:16.395Z\",\r\n            \"__v\": 0\r\n        }\r\n        setBlog(blog.concat(blogAdd))\r\n        alert(\"blog has been Added Succesfully!!\")\r\n    }\r\n\r\n    const addBlog = async (title, description, tag) => {\r\n        console.log(\"adding a new data\")\r\n\r\n        const response = await fetch(`http://localhost:5000/api/blogs/write`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQzNDExZTkzMDc0NzcyMDM1NmRhZmJiIn0sImlhdCI6MTY4MTMwMjM4Nn0.3A5Fj-j5uWUb6c3eYYvK4iqeTbZ2JTZNk6aiXQy5UDk'\r\n            },\r\n            body: JSON.stringify({ title, description, tag })\r\n        })\r\n        const json = response.json();\r\n        console.log(json)\r\n\r\n\r\n        const blogAdd = {\r\n            \"_id\": \"6437ed2c9a1a01ee5ea3aaa0\",\r\n            \"user\": \"643411e930747720356dafbb\",\r\n            \"title\": title,\r\n            \"description\": description,\r\n            \"tag\": tag,\r\n            \"timestamp\": \"2023-04-13T11:53:16.395Z\",\r\n            \"__v\": 0\r\n        }\r\n        setBlog(blog.concat(blogAdd))\r\n        alert(\"blog has been Added Succesfully!!\")\r\n    }\r\n\r\n    const deleteBlog = (id) => {\r\n        console.log(\"Deleted\" + id)\r\n        const newBlogs = blog.filter((blog) => { return NodeIterator._id !== id })\r\n        setBlog(newBlogs)\r\n    }\r\n\r\n    const editBlog = async (id, title, description, tag) => {\r\n        //Api call \r\n        const response = await fetch(`http://localhost:5000/api/blogs/update/${id}`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'auth-token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyIjp7ImlkIjoiNjQzNDExZTkzMDc0NzcyMDM1NmRhZmJiIn0sImlhdCI6MTY4MTMwMjM4Nn0.3A5Fj-j5uWUb6c3eYYvK4iqeTbZ2JTZNk6aiXQy5UDk'\r\n            },\r\n            body: JSON.stringify({ title, description, tag })\r\n        })\r\n        const json = response.json();\r\n        console.log(json)\r\n\r\n\r\n        //logic to edit in client\r\n        for (let index = 0; index < blog.length; index++) {\r\n            const element = blog[index];\r\n            if (element.id === id) {\r\n                element.title = title;\r\n                element.description = description;\r\n                element.tag = tag;\r\n            }\r\n        }\r\n    }\r\n    return (\r\n        <blogContext.Provider value={{ blog, setBlog, addBlog, deleteBlog, editBlog }}>\r\n            {props.children}\r\n        </blogContext.Provider>\r\n    )\r\n}\r\n\r\nexport default BlogState;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}