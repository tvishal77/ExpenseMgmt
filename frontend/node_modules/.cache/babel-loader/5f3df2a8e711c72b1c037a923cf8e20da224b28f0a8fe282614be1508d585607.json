{"ast":null,"code":"var _jsxFileName = \"D:\\\\downloads\\\\wise work\\\\Blog_02\\\\blogging_02\\\\src\\\\components\\\\UserData.js\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState, useEffect } from \"react\";\nimport blogContext from \"../context/blogs/BlogContext\";\nimport Blogitem from \"../components/Blogitem\";\nimport { useNavigate } from \"react-router-dom\";\nimport \"./Blogitem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UserData(props) {\n  _s();\n  const [users, setUsers] = useState([]);\n  const fetchUsers = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/getuser');\n      const data = await response.json();\n      setUsers(data);\n    } catch (error) {\n      console.error('Failed to fetch users:', error);\n    }\n  };\n  const context = useContext(blogContext);\n  const history = useNavigate();\n  const {\n    blog,\n    getBlogs\n  } = context;\n  useEffect(() => {\n    if (localStorage.getItem('token')) {\n      getBlogs();\n      fetchUsers();\n    } else {\n      history(\"/\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: `headuser text-${props.mode === \"light\" ? \"rgb(95, 158, 160)\" : \"white\"}`,\n      children: \"Your Blogs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row my-3\",\n      children: blog.map(blogs => {\n        return /*#__PURE__*/_jsxDEV(Blogitem, {\n          blogs: blogs,\n          mode: props.mode,\n          users: users\n        }, blogs._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 28\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(UserData, \"EBZoVclKqjgtvEU30hd2tre5fWs=\", false, function () {\n  return [useNavigate];\n});\n_c = UserData;\nvar _c;\n$RefreshReg$(_c, \"UserData\");","map":{"version":3,"names":["React","useContext","useState","useEffect","blogContext","Blogitem","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","UserData","props","_s","users","setUsers","fetchUsers","response","fetch","data","json","error","console","context","history","blog","getBlogs","localStorage","getItem","children","className","mode","fileName","_jsxFileName","lineNumber","columnNumber","map","blogs","_id","_c","$RefreshReg$"],"sources":["D:/downloads/wise work/Blog_02/blogging_02/src/components/UserData.js"],"sourcesContent":["import React, { useContext, useState, useEffect } from \"react\";\r\nimport blogContext from \"../context/blogs/BlogContext\";\r\nimport Blogitem from \"../components/Blogitem\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"./Blogitem.css\"\r\n\r\nexport default function UserData(props) {\r\n    const [users, setUsers] = useState([]);\r\n    const fetchUsers = async () => {\r\n        try {\r\n            const response = await fetch('http://localhost:5000/api/auth/getuser');\r\n            const data = await response.json();\r\n            setUsers(data);\r\n        } catch (error) {\r\n            console.error('Failed to fetch users:', error);\r\n        }\r\n    };\r\n\r\n    const context = useContext(blogContext)\r\n    const history = useNavigate()\r\n    const { blog, getBlogs } = context\r\n    useEffect(() => {\r\n        if (localStorage.getItem('token')) {\r\n            getBlogs();\r\n            fetchUsers();\r\n        }\r\n        else {\r\n            history(\"/\")\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <h1 className={`headuser text-${props.mode === \"light\" ? \"rgb(95, 158, 160)\" : \"white\"}`}>Your Blogs</h1>\r\n            <div className=\"row my-3\">\r\n                {blog.map((blogs) => {\r\n                    return <Blogitem key={blogs._id} blogs={blogs} mode={props.mode} users={users} />\r\n                })}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC9D,OAAOC,WAAW,MAAM,8BAA8B;AACtD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,gBAAgB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEvB,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACpC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC3B,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,wCAAwC,CAAC;MACtE,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;MAClCL,QAAQ,CAACI,IAAI,CAAC;IAClB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAClD;EACJ,CAAC;EAED,MAAME,OAAO,GAAGtB,UAAU,CAACG,WAAW,CAAC;EACvC,MAAMoB,OAAO,GAAGlB,WAAW,EAAE;EAC7B,MAAM;IAAEmB,IAAI;IAAEC;EAAS,CAAC,GAAGH,OAAO;EAClCpB,SAAS,CAAC,MAAM;IACZ,IAAIwB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE;MAC/BF,QAAQ,EAAE;MACVV,UAAU,EAAE;IAChB,CAAC,MACI;MACDQ,OAAO,CAAC,GAAG,CAAC;IAChB;EAEJ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACIhB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,gBACIrB,OAAA;MAAIsB,SAAS,EAAG,iBAAgBlB,KAAK,CAACmB,IAAI,KAAK,OAAO,GAAG,mBAAmB,GAAG,OAAQ,EAAE;MAAAF,QAAA,EAAC;IAAU;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,eACzG3B,OAAA;MAAKsB,SAAS,EAAC,UAAU;MAAAD,QAAA,EACpBJ,IAAI,CAACW,GAAG,CAAEC,KAAK,IAAK;QACjB,oBAAO7B,OAAA,CAACH,QAAQ;UAAiBgC,KAAK,EAAEA,KAAM;UAACN,IAAI,EAAEnB,KAAK,CAACmB,IAAK;UAACjB,KAAK,EAAEA;QAAM,GAAxDuB,KAAK,CAACC,GAAG;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAkD;MACrF,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEA;EAAA,gBACP;AAEX;AAACtB,EAAA,CArCuBF,QAAQ;EAAA,QAaZL,WAAW;AAAA;AAAAiC,EAAA,GAbP5B,QAAQ;AAAA,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}